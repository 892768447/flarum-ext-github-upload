module.exports=function(t){var e={};function n(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,a){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(a,r,function(e){return t[e]}.bind(null,r));return a},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=19)}([function(t,e){t.exports=flarum.core.compat.app},function(t,e,n){"use strict";function a(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}n.d(e,"a",(function(){return a}))},,function(t,e){t.exports=flarum.core.compat["utils/withAttr"]},function(t,e){t.exports=flarum.core.compat["components/Switch"]},,,function(t,e){t.exports=flarum.core.compat["utils/Stream"]},,,,,,function(t,e){t.exports=flarum.core.compat["components/SettingsModal"]},function(t,e){t.exports=flarum.core.compat["components/Button"]},function(t,e){t.exports=flarum.core.compat["utils/saveSettings"]},function(t,e){t.exports=flarum.core.compat["components/Alert"]},function(t,e){t.exports=flarum.core.compat["components/ExtensionPage"]},,function(t,e,n){"use strict";n.r(e);var a=n(0),r=n.n(a),i=n(1),o=n(13),s=n.n(o),u=n(4),l=n.n(u),c=function(t){function e(){return t.apply(this,arguments)||this}Object(i.a)(e,t);var n=e.prototype;return n.className=function(){return"Modal--small"},n.title=function(){return app.translator.trans("flarum-ext-github-upload.admin.settings.title")},n.form=function(){return[m("div",{className:"Form-group"},m("label",null,app.translator.trans("flarum-ext-github-upload.admin.settings.user_label")),m("input",{required:!0,className:"FormControl",bidi:this.setting("irony.github.upload.user")})),m("div",{className:"Form-group"},m("label",null,app.translator.trans("flarum-ext-github-upload.admin.settings.token_label")),m("input",{required:!0,className:"FormControl",bidi:this.setting("irony.github.upload.token")})),m("div",{className:"Form-group"},m("label",null,app.translator.trans("flarum-ext-github-upload.admin.settings.projects_label")),m("input",{required:!0,className:"FormControl",bidi:this.setting("irony.github.upload.projects")})),m("div",{className:"Form-group"},m("label",null,app.translator.trans("flarum-ext-github-upload.admin.settings.maxsize_label")),m("input",{required:!0,className:"FormControl",bidi:this.setting("irony.github.upload.maxsize")})),m("div",{className:"Form-group"},m("label",null,app.translator.trans("flarum-ext-github-upload.admin.settings.cdn_label1")),l.a.component({state:!!Number(this.setting("irony.github.upload.jsdelivrcdn")()),children:app.translator.trans("flarum-ext-github-upload.admin.settings.cdn_label2"),onchange:this.setting("irony.github.upload.jsdelivrcdn")}))]},e}(s.a),d=n(14),p=n.n(d),f=n(15),h=n.n(f),g=n(16),b=n.n(g),v=n(3),x=n.n(v),y=n(7),_=n.n(y),j=n(17),N=function(t){function e(){return t.apply(this,arguments)||this}Object(i.a)(e,t);var n=e.prototype;return n.oninit=function(e){var n=this;t.prototype.oninit.call(this,e),this.loading=!1,this.fields=["user","token","projects","maxsize"],this.checkboxes=["jsdelivrcdn"];var a=r.a.data.settings;this.values={},this.fields.forEach((function(t){return n.values[t]=_()(a[n.addPrefix(t)])})),this.checkboxes.forEach((function(t){return n.values[t]=_()("1"===a[n.addPrefix(t)])}))},n.content=function(){return[m(".UploadSettingsPage",[m(".container",[m("form",{onsubmit:this.onsubmit.bind(this)},[m("fieldset",[m("legend",r.a.translator.trans("flarum-ext-github-upload.admin.settings.user_label")),m("input",{className:"FormControl",value:this.values.user()||"",oninput:x()("value",this.values.user)})]),m("fieldset",[m("legend",r.a.translator.trans("flarum-ext-github-upload.admin.settings.token_label")),m("input",{className:"FormControl",value:this.values.token()||"",oninput:x()("value",this.values.token)})]),m("fieldset",[m("legend",r.a.translator.trans("flarum-ext-github-upload.admin.settings.projects_label")),m("input",{className:"FormControl",value:this.values.projects()||"",oninput:x()("value",this.values.projects)})]),m("fieldset",[m("legend",r.a.translator.trans("flarum-ext-github-upload.admin.settings.maxsize_label")),m("input.FormControl",{value:this.values.maxsize()||1024,oninput:x()("value",this.values.maxsize),type:"number",min:"0"})]),m("fieldset",[m("legend",r.a.translator.trans("flarum-ext-github-upload.admin.settings.cdn_label1")),l.a.component({state:this.values.jsdelivrcdn()||!1,onchange:this.values.jsdelivrcdn},r.a.translator.trans("flarum-ext-github-upload.admin.settings.cdn_label2"))]),p.a.component({type:"submit",className:"Button Button--primary",loading:this.loading,disabled:!this.changed()},r.a.translator.trans("flarum-ext-github-upload.admin.settings.save_label"))])])])]},n.changed=function(){var t=this,e=this.fields.some((function(e){return t.values[e]()!==r.a.data.settings[t.addPrefix(e)]})),n=this.checkboxes.some((function(e){return t.values[e]()!==("1"===r.a.data.settings[t.addPrefix(e)])}));return e||n},n.onsubmit=function(t){var e=this;if(t.preventDefault(),!this.loading){this.loading=!0,r.a.alerts.dismiss(this.successAlert);var n={};this.fields.forEach((function(t){return n[e.addPrefix(t)]=e.values[t]()})),this.checkboxes.forEach((function(t){return n[e.addPrefix(t)]=e.values[t]()})),h()(n).then((function(){e.successAlert=r.a.alerts.show(b.a,{type:"success"},r.a.translator.trans("flarum-ext-github-upload.admin.settings.success_label"))})).catch((function(){})).then((function(){e.loading=!1,m.redraw()}))}},n.addPrefix=function(t){return"irony.github.upload."+t},e}(n.n(j).a);r.a.initializers.add("irony-github-upload",(function(t){try{t.extensionSettings["irony-github-upload"]=function(){return t.modal.show(new c)}}catch(e){t.extensionData.for("irony-github-upload").registerPage(N)}}))}]);
//# sourceMappingURL=admin.js.map